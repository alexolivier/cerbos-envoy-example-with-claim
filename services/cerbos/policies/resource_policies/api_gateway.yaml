# yaml-language-server: $schema=https://api.cerbos.dev/latest/cerbos/policy/v1/Policy.schema.json
apiVersion: api.cerbos.dev/v1
resourcePolicy:
  version: default
  resource: api_gateway
  variables:
    local:
      responseHeaders: |-
        {
          "x-authz-accountId": request.auxData.jwt.accountId,
          "x-authz-id": request.principal.id,
          "x-authz-roles": request.principal.roles,
          "x-authz-foo": "bar"
        }
  rules:
    - name: allow-user-account-documents
      actions: [route]
      effect: EFFECT_ALLOW
      roles:
        - user
      condition:
        match:
          # Allow access to documents for the user's account based on token accountId claim
          expr: request.resource.attr.path.startsWith("/api/" + request.auxData.jwt.accountId + "/documents")
      output:
        when:
          ruleActivated: V.responseHeaders

    - name: allow-admin-all-routes
      actions: [route]
      effect: EFFECT_ALLOW
      roles:
        - admin
      output:
        when:
          ruleActivated: V.responseHeaders
